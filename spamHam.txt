import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split as tts
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

# Load the SMS spam dataset
df = pd.read_csv('/content/spam.csv', encoding='ISO-8859-1')

# Create a binary target variable 'spam'
df['spam'] = df['v1'].apply(lambda x: 1 if x == 'spam' else 0)

# Select relevant columns
new_df = df[['v1', 'v2', 'spam']]

# Split the data into training and testing sets
x_train, x_test, y_train, y_test = tts(new_df['v2'], new_df['spam'])

# Convert text messages to numerical features using CountVectorizer
v = CountVectorizer()
x_train_count = v.fit_transform(x_train.values)

# Train a Multinomial Naive Bayes classifier
model = MultinomialNB()
model.fit(x_train_count, y_train)

# Example emails for testing
emails = ["How are you, brother?", "Free entry"]
email_count = v.transform(emails)
predictions = model.predict(email_count)
print("Predictions for example emails:", predictions)

# Evaluate the model on the test data
x_test_count = v.transform(x_test)
accuracy = model.score(x_test_count, y_test)
print("Accuracy on the test data:", accuracy)

from sklearn.linear_model import LogisticRegression

# Create and train the Logistic Regression model
logistic_model = LogisticRegression()
logistic_model.fit(x_train_count, y_train)

# Evaluate the Logistic Regression model
logistic_accuracy = logistic_model.score(x_test_count, y_test)
print("Logistic Regression Accuracy:", logistic_accuracy)
